TODO 07.10.:
- add group-induced events
- fix remaining vision-methods
- add time delays


TODO 10.10.:
- further test WallBehaviour
- fix up run config for neighbour_selection

TODO 15.10.:
- try to optimise the decision rules (threshold, prevsteps, selection rules) fitting the expected behaviour to an event
- try LinReg/NN to fit real world data and compare to our simulation data
- create plots for the appendix (k variation, noise variation, min event duration, turn success etc.479532)
- create plots for comparisons (d vs. r, number of visible neighbours vs. order etc.)
- burst-and-coast behaviour
- create plots for fov, burst-and-coast, walls, speed variation, group-induced events
- add obstacles
- adjust active-elastic model

TODO 22.10.:
- try to optimise the thresholds/number of previous steps via random search. always run weights multiple times
    - try maximising speed by looking at all timesteps after the event
    - try looking at the last x timesteps for the success
- add weights to the local order of each previous step (same weights for all individuals) and then apply evolutionary algorithms to find the best weights

TODO 24.10.:
- find a genetic learning algo that will transform time data into a discrete value -> train it to pick between the nsm/k-combinations (without using local order)

TODO 29.10.:
- look into explainability of genetic results to explain the real world data and match it to our model
- check if anything has been done on open world scenarios for neighbour selection for survival (with food and predator and reproduction )

TODO 10.01.25:
- add table with combinations (rules, mechanisms, events) to the appendix of the paper
- Create tables for rules, mechanisms, events
- Reorganise the plots into panels in overleaf (so that they can be rearranged)
- Implement the naming conventions: rule with parameter k (e.g. nearest(1)), mechanism (e.g. m(rule1, rule2)), event (e.g. Random)
- Rework text
- Conduct sensitivity analysis on event duration
